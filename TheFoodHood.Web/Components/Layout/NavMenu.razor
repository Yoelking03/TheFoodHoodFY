@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using TheFoodHood.Web.Data
@inject AuthenticationStateProvider AuthProvider
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

@if (mostrarBarra)
{
    <div class="footer-nav">
        <!-- Botón de PEDIDOS (siempre visible) -->
        <a href="/pedidos" class="nav-item">
            <i class="fas fa-list"></i>
            <span>Pedidos</span>
        </a>

        <!-- Botón de INICIO u ÓRDENES según el tipo de usuario -->
        <a href="@rutaInicio" class="nav-item">
            <i class="fas fa-home"></i>
            <span>@textoInicio</span>
        </a>

        <!-- Botón central: Artículos o Carrito -->
        @if (!string.IsNullOrEmpty(textoCentral) && !string.IsNullOrEmpty(rutaCentral))
        {
            <a href="@rutaCentral" class="nav-item">
                <i class="fas fa-tag"></i>
                <span>@textoCentral</span>
            </a>
        }

        <!-- Botón de AJUSTES (siempre visible) -->
        <a href="/ajustes" class="nav-item">
            <i class="fas fa-cog"></i>
            <span>Ajustes</span>
        </a>
    </div>
}

@code {
    private string? tipoUsuario;
    private string textoInicio = "Inicio";
    private string rutaInicio = "/";
    private string? textoCentral;
    private string? rutaCentral;
    private bool mostrarBarra = false;

    protected override void OnInitialized()
    {
        var uri = Navigation.Uri.ToLower();

        // Ocultar barra si está en Login o Register
        if (uri.Contains("/account/login") || uri.Contains("/account/register"))
        {
            mostrarBarra = false;
            return;
        }

        var authState = AuthProvider.GetAuthenticationStateAsync().GetAwaiter().GetResult();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            mostrarBarra = true;
            var userEmail = user.Identity.Name;
            var appUser = UserManager.FindByEmailAsync(userEmail).GetAwaiter().GetResult();
            tipoUsuario = appUser?.TipoUsuario;

            switch (tipoUsuario)
            {
                case "Administrador":
                    textoCentral = "Artículos";
                    rutaCentral = "/articulos";
                    break;

                case "Cliente":
                    textoCentral = "Carrito";
                    rutaCentral = "/carritocompras";
                    break;

                case "Delivery":
                    textoInicio = "Órdenes";
                    rutaInicio = "/ordenesdelivery";
                    textoCentral = null;
                    rutaCentral = null;
                    break;

                default:
                    textoCentral = null;
                    rutaCentral = null;
                    break;
            }
        }
        else
        {
            mostrarBarra = false;
        }
    }
}
